% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotModuleScores.R
\name{plotModuleScores}
\alias{plotModuleScores}
\title{Generate a plot of annotated spots.}
\usage{
plotModuleScores(
  sp.obj = NULL,
  module.plot = NULL,
  plot.type = "spatial",
  embedding.name = NULL,
  violin.group = NULL,
  pt.size = 2,
  pt.alpha = 0.75,
  color.palette = NULL
)
}
\arguments{
\item{sp.obj}{An object of class \code{Seurat} or \code{SpatialExperiment} containing spatial data. Defaults to NULL.}

\item{module.plot}{A character specifying the name of the spatial module whose values should be visualized. Use e.g., "1" to plot module 1. Defaults to NULL.}

\item{plot.type}{A character specifying which type of plot should be generated. Must be one of "spatial", "embedding", or "violin". Defaults to "spatial".}

\item{embedding.name}{A character specifying which low-dimensional embedding to be used when \code{plot.type = "embedding"}. Defaults to NULL.}

\item{violin.group}{A character specifying which categorical variable in the metadata of \code{sp.obj} will be used to group the violins when \code{plot.type = "violin"}. Defaults to NULL.}

\item{pt.size}{A double specifying the size of the points to be plotted when \code{plot.type} is "spatial" or "embedding". Defaults to 2.}

\item{pt.alpha}{A double specifying the opacity of the points to be plotted when \code{plot.type} is "spatial" or "embedding". Defaults to 0.75.}

\item{color.palette}{A vector containing colors that are passed to \code{\link[ggplot2]{scale_color_gradientn}} or \code{\link[ggplot2]{scale_color_manual}} and \code{\link[ggplot2]{scale_fill_manual}}, depending on the value of \code{plot.type}. Defaults to NULL.}
}
\value{
An object of class \code{ggplot2}.
}
\description{
Given a \code{Seurat} or \code{SpatialExperiment} object, generate a variety of plots showing the distribution of spatial module scores.
}
\examples{
data(seu_brain)
seu_brain <- Seurat::NormalizeData(seu_brain, verbose = FALSE) \%>\%
             Seurat::FindVariableFeatures(nfeatures = 1000L, verbose = FALSE)
seu_brain <- findSpatiallyVariableFeaturesBayes(seu_brain,
                                                naive.hvgs = Seurat::VariableFeatures(seu_brain),
                                                kernel = "matern",
                                                kernel.smoothness = 1.5,
                                                algorithm = "meanfield",
                                                n.cores = 1L,
                                                save.model = TRUE) \%>\%
             classifySVGs(n.SVG = 200L)
svg_clusters <- clusterSVGsBayes(seu_brain,
                                 svgs = Seurat::VariableFeatures(seu_brain),
                                 n.clust = 2L,
                                 n.cores = 1L)
seu_brain <- scoreSpatialModules(seu_brain,
                                 svg.clusters = svg_clusters,
                                 n.cores = 1L)
plotModuleScores(seu_brain, module.plot = "1")
}
\seealso{
\code{\link{scoreSpatialModules}}

\code{\link{plotSpatialExpression}}

\code{\link{plotSpatialAttributes}}
}
\author{
Jack R. Leary
}
